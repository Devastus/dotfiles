set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",alacritty:Tc"

# set-option -ga terminal-overrides ",xterm-256color:Tc"
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g history-limit 5000
setw -g aggressive-resize on
set -sg escape-time 0

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename off   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title
setw -g mouse on

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

# activity
setw -g monitor-activity off
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

################################
### VISUALS
################################

set -g pane-border-style 'fg=#444444'
set -g pane-active-border-style 'fg=#4D96CC'
set -g message-style bg='#343B51',fg='#5CADF1'
set -g status-style bg='#343B51',fg='#B4C5D4'
set -g status-interval 1
# status left
# are we controlling tmux or the content of the panes?
set -g status-left '#[bg=#343B51]#[fg=#282a36]#{?client_prefix,#[bg=#5CADF1],#[fg=#B4C5D4]} $ '
# are we zoomed into a pane?
set -ga status-left '#[bg=#343B51]#[fg=#5CADF1] #{?window_zoomed_flag, ↕ ,   }'
# window status
set-window-option -g window-status-style fg='#B4C5D4',bg=default
set-window-option -g window-status-current-style fg='#343B51',bg='#5CADF1'
set -g window-status-current-format "#[fg=#343B51]#[bg=#5CADF1]#[fg=#343B51]#[bg=#5CADF1] #I #W #[fg=#5CADF1]#[bg=#343B51]"
set -g window-status-format "#[fg=#B4C5D4]#[bg=#343B51]#I #W #[fg=#343B51]#[bg=#343B51] "

################################
### KEYBINDS
################################

# Change prefix to Ctrl - a for easier usage
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using _ and -
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -h -c "#{pane_current_path}"
unbind '"'
unbind %

# Vim-like pane navigation
bind-key 'h' select-pane -L
bind-key 'j' select-pane -D
bind-key 'k' select-pane -U
bind-key 'l' select-pane -R

# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
